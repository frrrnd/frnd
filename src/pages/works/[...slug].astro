---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import { SiteConfig } from "@utils/SiteConfig";
import Header from "@partials/Header.astro";
import PageHeading from '@partials/PageHeading.astro';
import Grid from '@components/utils/Grid.astro';

export const prerender = true;

export async function getStaticPaths() {
    const portfolio = await getCollection('works');

    return portfolio.map((item) => ({
        params: { slug: item.slug },
        props: { item },
    }));
}

const { item } = Astro.props;

let Content = null;
let frontmatter = {};


if (item) {
    frontmatter = item.data || {};
    if (item.render) {
        const rendered = await item.render();
        Content = rendered.Content || null;
    }
}
---

<Layout props={{
    title: `${frontmatter.title || "Sem título"} — ${SiteConfig.title}`,
    description: SiteConfig.description || "Descrição não fornecida",
    image: SiteConfig.image || "Imagem padrão"
}}>
    <Header />

    <main class="main works__slug">
        <section class="index__section">
            <article>
              <Grid isContainer class="page__heading">
                <Grid sm="12" md="3">
                  
                </Grid>
        
                <Grid sm="12" md="5">
                    <div class="work__data">
                        <ul>
                            <li>{frontmatter.role} ・ {frontmatter.year}</li>
                        </ul>
                    </div>
                    
                    <h2 class="work__title">{frontmatter.title}</h2>

                    <p class="work__desc"><Fragment set:html={frontmatter.description} /></p>
                </Grid>
              </Grid>
            </article>
          </section>
        
        <section class="content-article">
            <div class="note-content">
                {Content ? <Content /> : <p>Conteúdo não disponível.</p>}
            </div>
        </section>
    </main>
</Layout>