---
import Note from '../../layouts/Note.astro';
import MainNavigation from '../../partials/MainNavigation.astro';
import { getCollection } from 'astro:content';
import FormattedDate from '../../partials/formattedDate.astro';

const notes = await getCollection('notes');

notes.sort((a,b) => Date.parse(b.data.publishDate) - Date.parse(a.data.publishDate));

const renderedNotes = await Promise.all(
	notes.map(async (note) => {
		const { Content } = await note.render();
		return { ...note, Content };
	})
);

---
<Note title="Notes">
	<MainNavigation />
	<main class="wrap notas-main">
        <section class="notas-section">
        {renderedNotes.map((note) => (
			
            <article class="content-article">
				{/* <header class="article-header">
                    <h1>{note.data.title}</h1>
                </header> */}
				<div class="note-content">
					<note.Content />
				</div>

				<a href={`/notes/${note.slug}`} title={`Permalink to ${note.data.title}`} class="article-permalink">
					<footer class="article-footer">
						<FormattedDate date={note.data.publishDate} />
						{/* {note.data.updateDate && (
							<div>Updated on <FormattedDate date={note.data.updateDate} /></div>
						)} */}
					</footer>
				</a>
            </article>
        ))}
        </section>
	</main>
</Note>
<style>
	.content-article {
		margin-bottom: 3rem;
		padding-bottom: 3rem;
	}

	.content-article:not(:last-child) {
		border-bottom: 1px solid var(--icon-bg);
	}

	.article-permalink {
		text-decoration: none;
	}
</style>