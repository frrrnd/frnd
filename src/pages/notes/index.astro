---
import Layout from '../../layouts/Layout.astro';
import MainNavigation from '../../partials/MainNavigation.astro';
import { getCollection } from 'astro:content';
import FormattedDate from '../../partials/formattedDate.astro';

const notes = await getCollection('notes');

notes.sort((a,b) => Date.parse(b.data.publishDate) - Date.parse(a.data.publishDate));

const renderedNotes = await Promise.all(
	notes.map(async (note) => {
		const { Content } = await note.render();
		return { ...note, Content };
	})
);

---
<Layout title="Notes">
	<main class="main wrap">
		<section class="content-section">
		{renderedNotes.map((note) => (
			<article class="content-article">
				<header class="article-header">
					<a href={`/notes/${note.slug}`} title={`Permalink to ${note.data.title}`}>
						<h2>{note.data.title}</h2>
					</a>
				</header>

				<note.Content />

				<footer class="article-footer">
					<a href={`/notes/${note.slug}`} title={`Permalink to ${note.data.title}`} class="article-permalink">
					<FormattedDate date={note.data.publishDate} />
					{/* {note.data.updateDate && (
						<div>Updated on <FormattedDate date={note.data.updateDate} /></div>
					)} */}
					</a>
				</footer>
			</article>
		))}
		</section>
	</main>
</Layout>